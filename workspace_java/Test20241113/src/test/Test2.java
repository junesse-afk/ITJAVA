package test;

public class Test2 {

	public static void main(String[] args) {
//		p83
//		비트연산자
//		&(AND) |(OR)  ^(XOR)  ~ (NOT)
		
//		&(AND) 비트곱
		int num1 = 5;  //8421 => 0101
		int num2 = 10; //8421 => 1010
		int result = num1 & num2;// 0101 & 1010
		System.out.println(result); // 0000 => 0
//		1 true , 0 false
//		1 & 1 => 1
//		1 & 0 => 0
//		0 & 1 => 0
//		0 & 0 => 0
		
//		|(OR) 비트합
		num1 = 5; //8421 => 0101
		num2 = 10;//8421 => 1010
		result = num1 | num2;// 0101 | 1010
		System.out.println(result); //1111 => 15
//		1 | 1 => 1
//		1 | 0 => 1
//		0 | 1 => 1
//		0 | 0 => 0
		
//		^(XOR) 비트차 같으면 0, 다르면 1
		num1 = 5; //8421 => 0101
		num2 = 10;//8421 => 1010
		result = num1 ^ num2;// 0101 ^ 1010
		System.out.println(result); // 1111 => 15
//		1 | 1 => 0
//		1 | 0 => 1
//		0 | 1 => 1
//		0 | 0 => 0

//		~ (NOT)
//		1 -> 0 , 0 -> 1
		num1 = 10;      //0000 1010 
		result = ~num1; //1111 0101 => 0000 1011 
		System.out.println(result); //-11
		
//		 10을 2진수 음수
//		 10 => 0000 1010
//		-10 => 1111 0110 => 0000 1001 + 1 => 0000 1010
		
//		p85 비트 이동 연산자( 시프트 연산자 )
//		<< (왼쪽으로 비트이동 연산) 숫자가 커짐
//		>> (오른쪽으로 비트이동 연산, 왼쪽 채워지는 비트 부호)
//		                                  숫자가 작아짐
//		>>> (오른쪽으로 비트이동 연산, 왼쪽 채워지는 비트 0)
		
		int num = 5;  // 0000 0101 => 0001 0100 => 16+4=>20
//		2의 n승 곱하기 => 5 * 2의 2승 => 5 * 4 => 20
		System.out.println(num << 2); //20
		
		num = 10; // 0000 1010 => 0000 0010 => 2
//		2의 n승 나누기 => 10 / 2의 2승 => 10 / 4 => 2
		System.out.println(num >> 2); //2
		
		num = 10; // 0000 1010 => 0000 0010 => 2
//		2의 n승 나누기 => 10 / 2의 2승 => 10 / 4 => 2
//		>>> 왼쪽 무조건 0으로 채워짐 
		System.out.println(num >>> 2); //2	
	}

}
